drop table if exists users cascade;
drop table if exists categories cascade;
drop table if exists locations cascade;
drop table if exists events cascade;
drop table if exists compilations cascade;
drop table if exists compilation_event cascade;
drop table if exists requests cascade;

create table if not exists users(
    id BIGINT generated by default as identity primary key,
    name VARCHAR(250) not null,
    email VARCHAR(254) unique not null
);

create table if not exists categories(
    id BIGINT generated by default as identity primary key,
    name VARCHAR(50) unique not null
);

create table if not exists locations(
    id BIGINT generated by default as identity primary key,
    lat FLOAT,
    lon FLOAT
);

create table if not exists events(
    id BIGINT generated by default as identity primary key,
    annotation VARCHAR(2000) unique not null,
    category_id BIGINT not null references categories(id),
    created_on TIMESTAMP,
    description VARCHAR(7000) not null,
    event_date TIMESTAMP not null,
    initiator_id BIGINT references users(id),
    location_id BIGINT not null references locations(id),
    paid BOOLEAN,
    participant_limit INTEGER,
    published_on TIMESTAMP,
    request_moderation BOOLEAN,
    state VARCHAR(10),
    title VARCHAR(120) not null
);

create table if not exists compilations(
    id BIGINT generated by default as identity primary key,
    pinned BOOLEAN,
    title VARCHAR(50) not null unique
);

create table if not exists compilation_event(
    compilation_id BIGINT references compilations(id),
    event_id BIGINT references events(id),
    primary key (compilation_id, event_id)
);

create table if not exists requests(
    id BIGINT generated by default as identity primary key,
    created TIMESTAMP,
    event_id BIGINT references events(id),
    requester_id BIGINT references users(id),
    status VARCHAR(50)
);